package Chatrmi.autentification;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Chatrmi.Chat;
import Chatrmi.Entities.User;

import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.JPasswordField;
import javax.swing.JButton;
import java.awt.event.ActionListener;
import java.net.MalformedURLException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;
import javax.swing.ImageIcon;

public class Login extends JFrame {

	private JPanel contentPane;
	private JTextField textField;
	private JPasswordField passwordField;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Login frame = new Login();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public Login() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 300);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel lblNewLabel = new JLabel("Login");
		lblNewLabel.setBounds(36, 59, 73, 13);
		contentPane.add(lblNewLabel);
		
		JLabel lblNewLabel_1 = new JLabel("Password");
		lblNewLabel_1.setBounds(36, 116, 73, 13);
		contentPane.add(lblNewLabel_1);
		
		textField = new JTextField();
		textField.setBounds(156, 56, 204, 19);
		contentPane.add(textField);
		textField.setColumns(10);
		
		passwordField = new JPasswordField();
		passwordField.setBounds(155, 113, 205, 19);
		contentPane.add(passwordField);
		
		JButton btnNewButton = new JButton("Login");
		btnNewButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				
				 if (!textField.getText().isEmpty() || !passwordField.getText().isEmpty()) {
					    PreparedStatement ps = null;
					    ResultSet rs = null;
					    Connection con = null;
	                    con = Connexion.getConnect();
	                    try {
	                        ps = con.prepareStatement("SELECT login FROM utilisateur WHERE login=? AND passwd =?");
	                        ps.setString(1, textField.getText());
	                        ps.setString(2, passwordField.getText());
	                        rs = ps.executeQuery();

	                        if (rs.next()) {
	                        	
	                            //appel a la methode qui vas ouvrire la session du client
	                            appel();

	                        } else {
	                            JOptionPane.showMessageDialog(null, "Connexion refus√©e!");
	                        }

	                    } catch (SQLException e1) {
	                        e1.printStackTrace();
	                    }
	                } else {
	                    JOptionPane.showMessageDialog(null, "Erreur de saisir!");
	                }
			}
		});

	
		btnNewButton.setBounds(156, 181, 85, 21);
		contentPane.add(btnNewButton);
		
		JButton btnNewButton_1 = new JButton("Register");
		btnNewButton_1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				setVisible(false);
				Register r=	new Register();
				r.setVisible(true);
				
			}
			
		});
		btnNewButton_1.setBounds(275, 181, 85, 21);
		contentPane.add(btnNewButton_1);
	}
	public void appel() {
		Chat c;
		try {
			User user=new User().getEtudiantGuiByLoginAndPasswd(textField.getText(), passwordField.getText());
			c = new Chat(textField.getText().trim(),user);
			c.show();
			dispose();
		} catch (MalformedURLException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		} catch (RemoteException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		} catch (NotBoundException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		} catch (ClassNotFoundException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		} catch (SQLException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		
		}
}
