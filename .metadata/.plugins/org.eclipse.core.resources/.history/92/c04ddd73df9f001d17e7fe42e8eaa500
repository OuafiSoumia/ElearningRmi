package ProfChat;

import java.awt.Cursor;
import java.awt.TextArea;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.rmi.RemoteException;
import java.rmi.server.UnicastRemoteObject;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import Chatrmi.ClientIf;
import Chatrmi.Entities.ClassRoom;
import Chatrmi.Entities.User;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.JTextPane;
import javax.swing.text.BadLocationException;
import javax.swing.text.StyledDocument;

import com.mysql.cj.xdevapi.Statement;

import Chatrmi.Serveur.ServerIF;

public class Prof extends UnicastRemoteObject {
	private ServerIF server;
    private String username;
    private JTextField textField;
    private JTextArea textArea;
    private String clientconnecter="";
    private JTextArea ConnectedList;
    private User user;
	private JTextArea ListClass;

    public Prof(ServerIF server,String username,JTextArea textArea,JTextArea ConnectedList,User user, JTextArea ListClass) throws RemoteException{
        this.username = username;
        this.server = server;
        this.textField = textField;
        this.textArea = textArea;       
        this.ConnectedList=ConnectedList;
        this.user=user;
        this.ListClass=ListClass;
  	  //  server.addProf(this,user.id);
  	    
      refreach();
    }
    public void refreach() throws RemoteException {
		ConnectedList.setText(null);
		clientconnecter="";
    	for(String all:server.getClientConnecter()) {
    		System.out.print("afficher "+all);
    		clientconnecter+=all+" \n";
    	}
    	
    	ConnectedList.setText(clientconnecter);

    }
    
    
    
	public void afficherClasse() throws ClassNotFoundException, RemoteException, SQLException {
		List<ClassRoom> s = new ClassRoom().getListClasses();
		String listClass="";

		for(ClassRoom classes:s) {
			listClass+="Nom Classe: "+classes.getNomClass()+"\n";
		}
		
		ListClass.setText(listClass);
		
	}
    
    
    



}
